//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.1433
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infoware.Docking.Docking {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o vuelva a generar su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infoware.Docking.Docking.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Docking.
        /// </summary>
        public static string Category_Docking {
            get {
                return ResourceManager.GetString("Category_Docking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Docking Notification.
        /// </summary>
        public static string Category_DockingNotification {
            get {
                return ResourceManager.GetString("Category_DockingNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Property Changed.
        /// </summary>
        public static string Category_PropertyChanged {
            get {
                return ResourceManager.GetString("Category_PropertyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a (Float).
        /// </summary>
        public static string DockAreaEditor_FloatCheckBoxText {
            get {
                return ResourceManager.GetString("DockAreaEditor_FloatCheckBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Determines if end user drag and drop docking is allowed..
        /// </summary>
        public static string DockContent_AllowEndUserDocking_Description {
            get {
                return ResourceManager.GetString("DockContent_AllowEndUserDocking_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The size to display the content in auto hide mode. Value &lt; 1 to specify the size in portion; value &gt;= 1 to specify the size in pixel..
        /// </summary>
        public static string DockContent_AutoHidePortion_Description {
            get {
                return ResourceManager.GetString("DockContent_AutoHidePortion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable/Disable the close button of the content..
        /// </summary>
        public static string DockContent_CloseButton_Description {
            get {
                return ResourceManager.GetString("DockContent_CloseButton_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Shows or hides the close button of the content. This property does not function with System MDI Document Style..
        /// </summary>
        public static string DockContent_CloseButtonVisible_Description {
            get {
                return ResourceManager.GetString("DockContent_CloseButtonVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The form must be of type IDockContent..
        /// </summary>
        public static string DockContent_Constructor_InvalidForm {
            get {
                return ResourceManager.GetString("DockContent_Constructor_InvalidForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Gets or sets a value indicating in which area of the DockPanel the content allowed to show..
        /// </summary>
        public static string DockContent_DockAreas_Description {
            get {
                return ResourceManager.GetString("DockContent_DockAreas_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when the value of DockState property changed..
        /// </summary>
        public static string DockContent_DockStateChanged_Description {
            get {
                return ResourceManager.GetString("DockContent_DockStateChanged_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Indicates the content will be hidden instead of being closed..
        /// </summary>
        public static string DockContent_HideOnClose_Description {
            get {
                return ResourceManager.GetString("DockContent_HideOnClose_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The desired docking state when first showing..
        /// </summary>
        public static string DockContent_ShowHint_Description {
            get {
                return ResourceManager.GetString("DockContent_ShowHint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Context menu displayed for the dock pane tab strip..
        /// </summary>
        public static string DockContent_TabPageContextMenu_Description {
            get {
                return ResourceManager.GetString("DockContent_TabPageContextMenu_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The tab text displayed in the dock pane. If not set, the Text property will be used..
        /// </summary>
        public static string DockContent_TabText_Description {
            get {
                return ResourceManager.GetString("DockContent_TabText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The text displayed when mouse hovers over the tab..
        /// </summary>
        public static string DockContent_ToolTipText_Description {
            get {
                return ResourceManager.GetString("DockContent_ToolTipText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The provided value is out of range..
        /// </summary>
        public static string DockContentHandler_AutoHidePortion_OutOfRange {
            get {
                return ResourceManager.GetString("DockContentHandler_AutoHidePortion_OutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Value: The value of DockAreas conflicts with current DockState..
        /// </summary>
        public static string DockContentHandler_DockAreas_InvalidValue {
            get {
                return ResourceManager.GetString("DockContentHandler_DockAreas_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The pane is invalid. Check the IsFloat and DockPanel properties of this dock pane..
        /// </summary>
        public static string DockContentHandler_DockPane_InvalidValue {
            get {
                return ResourceManager.GetString("DockContentHandler_DockPane_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The pane is invalid. Check the IsFloat and DockPanel properties of this dock pane..
        /// </summary>
        public static string DockContentHandler_FloatPane_InvalidValue {
            get {
                return ResourceManager.GetString("DockContentHandler_FloatPane_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid value, conflicts with DockableAreas  property..
        /// </summary>
        public static string DockContentHandler_IsFloat_InvalidValue {
            get {
                return ResourceManager.GetString("DockContentHandler_IsFloat_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dock state is invalid..
        /// </summary>
        public static string DockContentHandler_SetDockState_InvalidState {
            get {
                return ResourceManager.GetString("DockContentHandler_SetDockState_InvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dock panel is null..
        /// </summary>
        public static string DockContentHandler_SetDockState_NullPanel {
            get {
                return ResourceManager.GetString("DockContentHandler_SetDockState_NullPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid beforeContent, it must be contained by the pane..
        /// </summary>
        public static string DockContentHandler_Show_InvalidBeforeContent {
            get {
                return ResourceManager.GetString("DockContentHandler_Show_InvalidBeforeContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid DockState: Content can not be showed as &quot;Unknown&quot; or &quot;Hidden&quot;..
        /// </summary>
        public static string DockContentHandler_Show_InvalidDockState {
            get {
                return ResourceManager.GetString("DockContentHandler_Show_InvalidDockState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The previous pane is invalid. It can not be null, and its docking state must not be auto-hide..
        /// </summary>
        public static string DockContentHandler_Show_InvalidPrevPane {
            get {
                return ResourceManager.GetString("DockContentHandler_Show_InvalidPrevPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a DockPanel can not be null..
        /// </summary>
        public static string DockContentHandler_Show_NullDockPanel {
            get {
                return ResourceManager.GetString("DockContentHandler_Show_NullDockPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The Pane can not be null..
        /// </summary>
        public static string DockContentHandler_Show_NullPane {
            get {
                return ResourceManager.GetString("DockContentHandler_Show_NullPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid value, check DockableAreas property..
        /// </summary>
        public static string DockContentHandler_ShowHint_InvalidValue {
            get {
                return ResourceManager.GetString("DockContentHandler_ShowHint_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Context menu displayed for the dock pane tab strip..
        /// </summary>
        public static string DockHandler_TabPageContextMenuStrip_Description {
            get {
                return ResourceManager.GetString("DockHandler_TabPageContextMenuStrip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Press SHIFT for docking to full side..
        /// </summary>
        public static string DockIndicator_ToolTipText {
            get {
                return ResourceManager.GetString("DockIndicator_ToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Content: ActiveContent must be one of the visible contents, or null if there is no visible content..
        /// </summary>
        public static string DockPane_ActiveContent_InvalidValue {
            get {
                return ResourceManager.GetString("DockPane_ActiveContent_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid argument: Content can not be &quot;null&quot;..
        /// </summary>
        public static string DockPane_Constructor_NullContent {
            get {
                return ResourceManager.GetString("DockPane_Constructor_NullContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid argument: The content&apos;s DockPanel can not be &quot;null&quot;..
        /// </summary>
        public static string DockPane_Constructor_NullDockPanel {
            get {
                return ResourceManager.GetString("DockPane_Constructor_NullDockPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The specified container conflicts with the IsFloat property..
        /// </summary>
        public static string DockPane_DockTo_InvalidContainer {
            get {
                return ResourceManager.GetString("DockPane_DockTo_InvalidContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The previous pane does not exist in the nested docking pane collection..
        /// </summary>
        public static string DockPane_DockTo_NoPrevPane {
            get {
                return ResourceManager.GetString("DockPane_DockTo_NoPrevPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The container can not be null..
        /// </summary>
        public static string DockPane_DockTo_NullContainer {
            get {
                return ResourceManager.GetString("DockPane_DockTo_NullContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The previous pane can not be null when the nested docking pane collection is not empty..
        /// </summary>
        public static string DockPane_DockTo_NullPrevPane {
            get {
                return ResourceManager.GetString("DockPane_DockTo_NullPrevPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The previous pane can not be itself..
        /// </summary>
        public static string DockPane_DockTo_SelfPrevPane {
            get {
                return ResourceManager.GetString("DockPane_DockTo_SelfPrevPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a FloatWindow property can not be set to &quot;null&quot; when DockState is DockState.Float..
        /// </summary>
        public static string DockPane_FloatWindow_InvalidValue {
            get {
                return ResourceManager.GetString("DockPane_FloatWindow_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Content: Content not within the collection..
        /// </summary>
        public static string DockPane_SetContentIndex_InvalidContent {
            get {
                return ResourceManager.GetString("DockPane_SetContentIndex_InvalidContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Index: The index is out of range..
        /// </summary>
        public static string DockPane_SetContentIndex_InvalidIndex {
            get {
                return ResourceManager.GetString("DockPane_SetContentIndex_InvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The state for the dock pane is invalid..
        /// </summary>
        public static string DockPane_SetDockState_InvalidState {
            get {
                return ResourceManager.GetString("DockPane_SetDockState_InvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Auto Hide.
        /// </summary>
        public static string DockPaneCaption_ToolTipAutoHide {
            get {
                return ResourceManager.GetString("DockPaneCaption_ToolTipAutoHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Close.
        /// </summary>
        public static string DockPaneCaption_ToolTipClose {
            get {
                return ResourceManager.GetString("DockPaneCaption_ToolTipClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Options.
        /// </summary>
        public static string DockPaneCaption_ToolTipOptions {
            get {
                return ResourceManager.GetString("DockPaneCaption_ToolTipOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Content: The content must be auto-hide state and associates with this DockPanel..
        /// </summary>
        public static string DockPanel_ActiveAutoHideContent_InvalidValue {
            get {
                return ResourceManager.GetString("DockPanel_ActiveAutoHideContent_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when the value of ActiveContentProperty changed..
        /// </summary>
        public static string DockPanel_ActiveContentChanged_Description {
            get {
                return ResourceManager.GetString("DockPanel_ActiveContentChanged_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when the value of ActiveDocument property changed..
        /// </summary>
        public static string DockPanel_ActiveDocumentChanged_Description {
            get {
                return ResourceManager.GetString("DockPanel_ActiveDocumentChanged_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when the value of ActivePane property changed..
        /// </summary>
        public static string DockPanel_ActivePaneChanged_Description {
            get {
                return ResourceManager.GetString("DockPanel_ActivePaneChanged_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Determines if the drag and drop docking is allowed..
        /// </summary>
        public static string DockPanel_AllowEndUserDocking_Description {
            get {
                return ResourceManager.GetString("DockPanel_AllowEndUserDocking_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Determines if the drag and drop nested docking is allowed..
        /// </summary>
        public static string DockPanel_AllowEndUserNestedDocking_Description {
            get {
                return ResourceManager.GetString("DockPanel_AllowEndUserNestedDocking_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when a content added to the DockPanel..
        /// </summary>
        public static string DockPanel_ContentAdded_Description {
            get {
                return ResourceManager.GetString("DockPanel_ContentAdded_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Occurs when a content removed from the DockPanel..
        /// </summary>
        public static string DockPanel_ContentRemoved_Description {
            get {
                return ResourceManager.GetString("DockPanel_ContentRemoved_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The default size of float window..
        /// </summary>
        public static string DockPanel_DefaultFloatWindowSize_Description {
            get {
                return ResourceManager.GetString("DockPanel_DefaultFloatWindowSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Provides Visual Studio .Net style docking..
        /// </summary>
        public static string DockPanel_Description {
            get {
                return ResourceManager.GetString("DockPanel_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Size of the bottom docking window. Value &lt; 1 to specify the size in portion; value &gt; 1 to specify the size in pixels..
        /// </summary>
        public static string DockPanel_DockBottomPortion_Description {
            get {
                return ResourceManager.GetString("DockPanel_DockBottomPortion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Size of the left docking window. Value &lt; 1 to specify the size in portion; value &gt; 1 to specify the size in pixels..
        /// </summary>
        public static string DockPanel_DockLeftPortion_Description {
            get {
                return ResourceManager.GetString("DockPanel_DockLeftPortion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The visual skin to use when displaying the docked windows..
        /// </summary>
        public static string DockPanel_DockPanelSkin {
            get {
                return ResourceManager.GetString("DockPanel_DockPanelSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Size of the right docking window. Value &lt; 1 to specify the size in portion; value &gt; 1 to specify the size in pixels..
        /// </summary>
        public static string DockPanel_DockRightPortion_Description {
            get {
                return ResourceManager.GetString("DockPanel_DockRightPortion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Size of the top docking window. Value &lt; 1 to specify the size in portion; value &gt; 1 to specify the size in pixels..
        /// </summary>
        public static string DockPanel_DockTopPortion_Description {
            get {
                return ResourceManager.GetString("DockPanel_DockTopPortion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The style of the document window..
        /// </summary>
        public static string DockPanel_DocumentStyle_Description {
            get {
                return ResourceManager.GetString("DockPanel_DocumentStyle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Determines where the tab strip for Document style content is drawn..
        /// </summary>
        public static string DockPanel_DocumentTabStripLocation {
            get {
                return ResourceManager.GetString("DockPanel_DocumentTabStripLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The DockPanel has already been initialized..
        /// </summary>
        public static string DockPanel_LoadFromXml_AlreadyInitialized {
            get {
                return ResourceManager.GetString("DockPanel_LoadFromXml_AlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The configuration file&apos;s version is invalid..
        /// </summary>
        public static string DockPanel_LoadFromXml_InvalidFormatVersion {
            get {
                return ResourceManager.GetString("DockPanel_LoadFromXml_InvalidFormatVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The XML file format is invalid..
        /// </summary>
        public static string DockPanel_LoadFromXml_InvalidXmlFormat {
            get {
                return ResourceManager.GetString("DockPanel_LoadFromXml_InvalidXmlFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid parent form. When using DockingMdi or SystemMdi document style, the DockPanel control must be the child control of the main MDI container form..
        /// </summary>
        public static string DockPanel_ParentForm_Invalid {
            get {
                return ResourceManager.GetString("DockPanel_ParentForm_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a DockPanel configuration file. Author: Infoware Soluciones, all rights reserved..
        /// </summary>
        public static string DockPanel_Persistor_XmlFileComment1 {
            get {
                return ResourceManager.GetString("DockPanel_Persistor_XmlFileComment1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a !!! AUTOMATICALLY GENERATED FILE. DO NOT MODIFY !!!.
        /// </summary>
        public static string DockPanel_Persistor_XmlFileComment2 {
            get {
                return ResourceManager.GetString("DockPanel_Persistor_XmlFileComment2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Indicates whether the control layout is right-to-left when the RightToLeft property is set to Yes..
        /// </summary>
        public static string DockPanel_RightToLeftLayout_Description {
            get {
                return ResourceManager.GetString("DockPanel_RightToLeftLayout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Index: The index is out of range..
        /// </summary>
        public static string DockPanel_SetPaneIndex_InvalidIndex {
            get {
                return ResourceManager.GetString("DockPanel_SetPaneIndex_InvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Pane: DockPane not within the collection..
        /// </summary>
        public static string DockPanel_SetPaneIndex_InvalidPane {
            get {
                return ResourceManager.GetString("DockPanel_SetPaneIndex_InvalidPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Determines if the document icon will be displayed in the tab strip..
        /// </summary>
        public static string DockPanel_ShowDocumentIcon_Description {
            get {
                return ResourceManager.GetString("DockPanel_ShowDocumentIcon_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Close.
        /// </summary>
        public static string DockPaneStrip_ToolTipClose {
            get {
                return ResourceManager.GetString("DockPaneStrip_ToolTipClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Window List.
        /// </summary>
        public static string DockPaneStrip_ToolTipWindowList {
            get {
                return ResourceManager.GetString("DockPaneStrip_ToolTipWindowList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid argument: DockPanel can not be &quot;null&quot;..
        /// </summary>
        public static string FloatWindow_Constructor_NullDockPanel {
            get {
                return ResourceManager.GetString("FloatWindow_Constructor_NullDockPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Index: The index is out of range..
        /// </summary>
        public static string FloatWindow_SetPaneIndex_InvalidIndex {
            get {
                return ResourceManager.GetString("FloatWindow_SetPaneIndex_InvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Pane: DockPane not within the collection..
        /// </summary>
        public static string FloatWindow_SetPaneIndex_InvalidPane {
            get {
                return ResourceManager.GetString("FloatWindow_SetPaneIndex_InvalidPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid DockPanel..
        /// </summary>
        public static string IDockDragSource_DockTo_InvalidPanel {
            get {
                return ResourceManager.GetString("IDockDragSource_DockTo_InvalidPanel", resourceCulture);
            }
        }
    }
}
